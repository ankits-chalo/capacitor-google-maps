{"version":3,"file":"map.js","sourceRoot":"","sources":["../../src/map.ts"],"names":[],"mappings":"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","sourcesContent":["import { Capacitor } from '@capacitor/core';\nimport type { PluginListenerHandle } from '@capacitor/core';\n\nimport type {\n\tCameraConfig,\n\tMarker,\n\tMapPadding,\n\tMapListenerCallback,\n\tMapReadyCallbackData,\n\tCameraIdleCallbackData,\n\tCameraMoveStartedCallbackData,\n\tClusterClickCallbackData,\n\tMapClickCallbackData,\n\tMarkerClickCallbackData,\n\tMyLocationButtonClickCallbackData,\n\tPolygon,\n\tPolygonClickCallbackData,\n\tCircle,\n\tCircleClickCallbackData,\n\t// Polyline,\n\tPolylineCallbackData,\n} from './definitions';\nimport { LatLngBounds, MapType } from './definitions';\nimport type { CreateMapArgs } from './implementation';\nimport { CapacitorGoogleMaps } from './implementation';\n\nexport interface GoogleMapInterface {\n\tcreate(\n\t\toptions: CreateMapArgs,\n\t\tcallback?: MapListenerCallback<MapReadyCallbackData>\n\t): Promise<GoogleMap>;\n\tenableTouch(): Promise<void>;\n\tdisableTouch(): Promise<void>;\n\tenableClustering(\n\t\t/**\n\t\t * The minimum number of markers that can be clustered together. The default is 4 markers.\n\t\t */\n\t\tminClusterSize?: number\n\t): Promise<void>;\n\tdisableClustering(): Promise<void>;\n\taddMarker(marker: Marker): Promise<string>;\n\taddMarkers(markers: Marker[]): Promise<string[]>;\n\tremoveMarker(id: string): Promise<void>;\n\tremoveMarkers(ids: string[]): Promise<void>;\n\taddPolygons(polygons: Polygon[]): Promise<string[]>;\n\tremovePolygons(ids: string[]): Promise<void>;\n\taddCircles(circles: Circle[]): Promise<string[]>;\n\tremoveCircles(ids: string[]): Promise<void>;\n\t// addPolylines(polylines: Polyline[]): Promise<string[]>;\n\taddPolylines(\n\t\tcords: any,\n\t\t{ strokeWidth, strokeColor, strokeOpacity, zIndex }: any\n\t): Promise<string[]>;\n\tsetMarkerPosition(args: any): Promise<{ id: string }>;\n\tfitBound(args: any): Promise<void>;\n\tremovePolylines(ids: string[]): Promise<void>;\n\tdestroy(): Promise<void>;\n\tsetCamera(config: CameraConfig): Promise<void>;\n\t/**\n\t * Get current map type\n\t */\n\tgetMapType(): Promise<MapType>;\n\tsetMapType(mapType: MapType): Promise<void>;\n\tenableIndoorMaps(enabled: boolean): Promise<void>;\n\tenableTrafficLayer(enabled: boolean): Promise<void>;\n\tenableAccessibilityElements(enabled: boolean): Promise<void>;\n\tenableCurrentLocation(enabled: boolean): Promise<void>;\n\tsetPadding(padding: MapPadding): Promise<void>;\n\t/**\n\t * Sets the map viewport to contain the given bounds.\n\t * @param bounds The bounds to fit in the viewport.\n\t * @param padding Optional padding to apply in pixels. The bounds will be fit in the part of the map that remains after padding is removed.\n\t */\n\tfitBounds(bounds: LatLngBounds, padding?: number): Promise<void>;\n\tsetOnBoundsChangedListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void>;\n\tsetOnCameraIdleListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void>;\n\tsetOnCameraMoveStartedListener(\n\t\tcallback?: MapListenerCallback<CameraMoveStartedCallbackData>\n\t): Promise<void>;\n\tsetOnClusterClickListener(\n\t\tcallback?: MapListenerCallback<ClusterClickCallbackData>\n\t): Promise<void>;\n\tsetOnClusterInfoWindowClickListener(\n\t\tcallback?: MapListenerCallback<ClusterClickCallbackData>\n\t): Promise<void>;\n\tsetOnInfoWindowClickListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void>;\n\tsetOnMapClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void>;\n\tsetOnMarkerClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\n\tsetOnPolygonClickListener(\n\t\tcallback?: MapListenerCallback<PolygonClickCallbackData>\n\t): Promise<void>;\n\tsetOnCircleClickListener(callback?: MapListenerCallback<CircleClickCallbackData>): Promise<void>;\n\tsetOnPolylineClickListener(callback?: MapListenerCallback<PolylineCallbackData>): Promise<void>;\n\tsetOnMarkerDragStartListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void>;\n\tsetOnMarkerDragListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\n\tsetOnMarkerDragEndListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void>;\n\tsetOnMyLocationButtonClickListener(\n\t\tcallback?: MapListenerCallback<MyLocationButtonClickCallbackData>\n\t): Promise<void>;\n\tsetOnMyLocationClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void>;\n}\n\nclass MapCustomElement extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tconnectedCallback() {\n\t\tthis.innerHTML = '';\n\n\t\tif (Capacitor.getPlatform() == 'ios') {\n\t\t\tthis.style.overflow = 'scroll';\n\t\t\t(this.style as any)['-webkit-overflow-scrolling'] = 'touch';\n\n\t\t\tconst overflowDiv = document.createElement('div');\n\t\t\toverflowDiv.style.height = '200%';\n\n\t\t\tthis.appendChild(overflowDiv);\n\t\t}\n\t}\n}\n\ncustomElements.define('capacitor-google-map', MapCustomElement);\n\nexport class GoogleMap {\n\tprivate id: string;\n\tprivate element: HTMLElement | null = null;\n\tprivate resizeObserver: ResizeObserver | null = null;\n\n\tprivate onBoundsChangedListener?: PluginListenerHandle;\n\tprivate onCameraIdleListener?: PluginListenerHandle;\n\tprivate onCameraMoveStartedListener?: PluginListenerHandle;\n\tprivate onClusterClickListener?: PluginListenerHandle;\n\tprivate onClusterInfoWindowClickListener?: PluginListenerHandle;\n\tprivate onInfoWindowClickListener?: PluginListenerHandle;\n\tprivate onMapClickListener?: PluginListenerHandle;\n\tprivate onPolylineClickListener?: PluginListenerHandle;\n\tprivate onMarkerClickListener?: PluginListenerHandle;\n\tprivate onPolygonClickListener?: PluginListenerHandle;\n\tprivate onCircleClickListener?: PluginListenerHandle;\n\tprivate onMarkerDragStartListener?: PluginListenerHandle;\n\tprivate onMarkerDragListener?: PluginListenerHandle;\n\tprivate onMarkerDragEndListener?: PluginListenerHandle;\n\tprivate onMyLocationButtonClickListener?: PluginListenerHandle;\n\tprivate onMyLocationClickListener?: PluginListenerHandle;\n\n\tprivate constructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Creates a new instance of a Google Map\n\t * @param options\n\t * @param callback\n\t * @returns GoogleMap\n\t */\n\tpublic static async create(\n\t\toptions: CreateMapArgs,\n\t\tcallback?: MapListenerCallback<MapReadyCallbackData>\n\t): Promise<GoogleMap> {\n\t\tconst newMap = new GoogleMap(options.id);\n\n\t\tif (!options.element) {\n\t\t\tthrow new Error('container element is required');\n\t\t}\n\n\t\tif (options.config.androidLiteMode === undefined) {\n\t\t\toptions.config.androidLiteMode = false;\n\t\t}\n\n\t\tnewMap.element = options.element;\n\t\tnewMap.element.dataset.internalId = options.id;\n\n\t\tconst elementBounds = await GoogleMap.getElementBounds(options.element);\n\t\toptions.config.width = elementBounds.width;\n\t\toptions.config.height = elementBounds.height;\n\t\toptions.config.x = elementBounds.x;\n\t\toptions.config.y = elementBounds.y;\n\t\toptions.config.devicePixelRatio = window.devicePixelRatio;\n\n\t\tif (Capacitor.getPlatform() == 'android') {\n\t\t\tnewMap.initScrolling();\n\t\t}\n\n\t\tif (Capacitor.isNativePlatform()) {\n\t\t\t(options.element as any) = {};\n\n\t\t\tconst getMapBounds = () => {\n\t\t\t\tconst mapRect = newMap.element?.getBoundingClientRect() ?? ({} as DOMRect);\n\t\t\t\treturn {\n\t\t\t\t\tx: mapRect.x,\n\t\t\t\t\ty: mapRect.y,\n\t\t\t\t\twidth: mapRect.width,\n\t\t\t\t\theight: mapRect.height,\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tconst onDisplay = () => {\n\t\t\t\tCapacitorGoogleMaps.onDisplay({\n\t\t\t\t\tid: newMap.id,\n\t\t\t\t\tmapBounds: getMapBounds(),\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst onResize = () => {\n\t\t\t\tCapacitorGoogleMaps.onResize({\n\t\t\t\t\tid: newMap.id,\n\t\t\t\t\tmapBounds: getMapBounds(),\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst ionicPage = newMap.element.closest('.ion-page');\n\t\t\tif (Capacitor.getPlatform() === 'ios' && ionicPage) {\n\t\t\t\tionicPage.addEventListener('ionViewWillEnter', () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tonDisplay();\n\t\t\t\t\t}, 100);\n\t\t\t\t});\n\t\t\t\tionicPage.addEventListener('ionViewDidEnter', () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tonDisplay();\n\t\t\t\t\t}, 100);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst lastState = {\n\t\t\t\twidth: elementBounds.width,\n\t\t\t\theight: elementBounds.height,\n\t\t\t\tisHidden: false,\n\t\t\t};\n\t\t\tnewMap.resizeObserver = new ResizeObserver(() => {\n\t\t\t\tif (newMap.element != null) {\n\t\t\t\t\tconst mapRect = newMap.element.getBoundingClientRect();\n\n\t\t\t\t\tconst isHidden = mapRect.width === 0 && mapRect.height === 0;\n\t\t\t\t\tif (!isHidden) {\n\t\t\t\t\t\tif (lastState.isHidden) {\n\t\t\t\t\t\t\tif (Capacitor.getPlatform() === 'ios' && !ionicPage) {\n\t\t\t\t\t\t\t\tonDisplay();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (lastState.width !== mapRect.width || lastState.height !== mapRect.height) {\n\t\t\t\t\t\t\tonResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlastState.width = mapRect.width;\n\t\t\t\t\tlastState.height = mapRect.height;\n\t\t\t\t\tlastState.isHidden = isHidden;\n\t\t\t\t}\n\t\t\t});\n\t\t\tnewMap.resizeObserver.observe(newMap.element);\n\t\t}\n\n\t\t// small delay to allow for iOS WKWebView to setup corresponding element sub-scroll views ???\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tsetTimeout(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait CapacitorGoogleMaps.create(options);\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t});\n\n\t\tif (callback) {\n\t\t\tconst onMapReadyListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMapReady',\n\t\t\t\t(data: MapReadyCallbackData) => {\n\t\t\t\t\t// if (data.mapId == newMap.id) {\n\t\t\t\t\tcallback(data);\n\t\t\t\t\tonMapReadyListener.remove();\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn newMap;\n\t}\n\n\tprivate static async getElementBounds(element: HTMLElement): Promise<DOMRect> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet elementBounds = element.getBoundingClientRect();\n\t\t\tif (elementBounds.width == 0) {\n\t\t\t\tlet retries = 0;\n\t\t\t\tconst boundsInterval = setInterval(function () {\n\t\t\t\t\tif (elementBounds.width == 0 && retries < 30) {\n\t\t\t\t\t\telementBounds = element.getBoundingClientRect();\n\t\t\t\t\t\tretries++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (retries == 30) {\n\t\t\t\t\t\t\tconsole.warn('Map size could not be determined');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclearInterval(boundsInterval);\n\t\t\t\t\t\tresolve(elementBounds);\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t} else {\n\t\t\t\tresolve(elementBounds);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Enable touch events on native map\n\t *\n\t * @returns void\n\t */\n\tasync enableTouch(): Promise<void> {\n\t\treturn CapacitorGoogleMaps.enableTouch({\n\t\t\tid: this.id,\n\t\t});\n\t}\n\n\t/**\n\t * Disable touch events on native map\n\t *\n\t * @returns void\n\t */\n\tasync disableTouch(): Promise<void> {\n\t\treturn CapacitorGoogleMaps.disableTouch({\n\t\t\tid: this.id,\n\t\t});\n\t}\n\n\t/**\n\t * Enable marker clustering\n\t *\n\t * @param minClusterSize - The minimum number of markers that can be clustered together.\n\t * @defaultValue 4\n\t *\n\t * @returns void\n\t */\n\tasync enableClustering(minClusterSize?: number): Promise<void> {\n\t\treturn CapacitorGoogleMaps.enableClustering({\n\t\t\tid: this.id,\n\t\t\tminClusterSize,\n\t\t});\n\t}\n\n\t/**\n\t * Disable marker clustering\n\t *\n\t * @returns void\n\t */\n\tasync disableClustering(): Promise<void> {\n\t\treturn CapacitorGoogleMaps.disableClustering({\n\t\t\tid: this.id,\n\t\t});\n\t}\n\n\t/**\n\t * Adds a marker to the map\n\t *\n\t * @param marker\n\t * @returns created marker id\n\t */\n\tasync addMarker(marker: Marker): Promise<string> {\n\t\tconst res = await CapacitorGoogleMaps.addMarker({\n\t\t\tid: this.id,\n\t\t\tmarker,\n\t\t});\n\n\t\treturn res.id;\n\t}\n\n\t/**\n\t * Adds multiple markers to the map\n\t *\n\t * @param markers\n\t * @returns array of created marker IDs\n\t */\n\tasync addMarkers(markers: Marker[]): Promise<string[]> {\n\t\tconst res = await CapacitorGoogleMaps.addMarkers({\n\t\t\tid: this.id,\n\t\t\tmarkers,\n\t\t});\n\n\t\treturn res.ids;\n\t}\n\n\t/**\n\t * Remove marker from the map\n\t *\n\t * @param id id of the marker to remove from the map\n\t * @returns\n\t */\n\tasync removeMarker(id: string): Promise<void> {\n\t\treturn CapacitorGoogleMaps.removeMarker({\n\t\t\tid: this.id,\n\t\t\tmarkerId: id,\n\t\t});\n\t}\n\n\t/**\n\t * Remove markers from the map\n\t *\n\t * @param ids array of ids to remove from the map\n\t * @returns\n\t */\n\tasync removeMarkers(ids: string[]): Promise<void> {\n\t\treturn CapacitorGoogleMaps.removeMarkers({\n\t\t\tid: this.id,\n\t\t\tmarkerIds: ids,\n\t\t});\n\t}\n\n\tasync addPolygons(polygons: Polygon[]): Promise<string[]> {\n\t\tconst res = await CapacitorGoogleMaps.addPolygons({\n\t\t\tid: this.id,\n\t\t\tpolygons,\n\t\t});\n\n\t\treturn res.ids;\n\t}\n\n\t// async addPolylines(polylines: Polyline[]): Promise<string[]> {\n\t//   const res = await CapacitorGoogleMaps.addPolylines({\n\t//     id: this.id,\n\t//     polylines,\n\t//   });\n\n\t//   return res.ids;\n\t// }\n\n\tasync addPolylines(cords: any, { strokeWidth = 1, strokeColor, strokeOpacity, zIndex }: any) {\n\t\tconst res = await CapacitorGoogleMaps.addPolylines({\n\t\t\tid: this.id,\n\t\t\tcords,\n\t\t\tpolylineProps: {\n\t\t\t\tstrokeWidth,\n\t\t\t\tstrokeColor,\n\t\t\t\tstrokeOpacity,\n\t\t\t\tzIndex,\n\t\t\t},\n\t\t});\n\t\treturn res.ids;\n\t}\n\n\tasync setMarkerPosition(marker: any) {\n\t\tconst res = await CapacitorGoogleMaps.setMarkerPosition({\n\t\t\tid: this.id,\n\t\t\tmarker,\n\t\t});\n\t\treturn res.id;\n\t}\n\n\tasync fitBound(cords: any) {\n\t\treturn CapacitorGoogleMaps.fitBound({\n\t\t\tid: this.id,\n\t\t\tcords,\n\t\t});\n\t}\n\n\tasync removePolygons(ids: string[]): Promise<void> {\n\t\treturn CapacitorGoogleMaps.removePolygons({\n\t\t\tid: this.id,\n\t\t\tpolygonIds: ids,\n\t\t});\n\t}\n\n\tasync addCircles(circles: Circle[]): Promise<string[]> {\n\t\tconst res = await CapacitorGoogleMaps.addCircles({\n\t\t\tid: this.id,\n\t\t\tcircles,\n\t\t});\n\n\t\treturn res.ids;\n\t}\n\n\tasync removeCircles(ids: string[]): Promise<void> {\n\t\treturn CapacitorGoogleMaps.removeCircles({\n\t\t\tid: this.id,\n\t\t\tcircleIds: ids,\n\t\t});\n\t}\n\n\tasync removePolylines(ids: string[]): Promise<void> {\n\t\treturn CapacitorGoogleMaps.removePolylines({\n\t\t\tid: this.id,\n\t\t\tpolylineIds: ids,\n\t\t});\n\t}\n\n\t/**\n\t * Destroy the current instance of the map\n\t */\n\tasync destroy(): Promise<void> {\n\t\tif (Capacitor.getPlatform() == 'android') {\n\t\t\tthis.disableScrolling();\n\t\t}\n\n\t\tif (Capacitor.isNativePlatform()) {\n\t\t\tthis.resizeObserver?.disconnect();\n\t\t}\n\n\t\tthis.removeAllMapListeners();\n\n\t\treturn CapacitorGoogleMaps.destroy({\n\t\t\tid: this.id,\n\t\t});\n\t}\n\n\t/**\n\t * Update the map camera configuration\n\t *\n\t * @param config\n\t * @returns\n\t */\n\tasync setCamera(config: CameraConfig): Promise<void> {\n\t\treturn CapacitorGoogleMaps.setCamera({\n\t\t\tid: this.id,\n\t\t\tconfig,\n\t\t});\n\t}\n\n\tasync getMapType(): Promise<MapType> {\n\t\tconst { type } = await CapacitorGoogleMaps.getMapType({ id: this.id });\n\t\treturn MapType[type as keyof typeof MapType];\n\t}\n\n\t/**\n\t * Sets the type of map tiles that should be displayed.\n\t *\n\t * @param mapType\n\t * @returns\n\t */\n\tasync setMapType(mapType: MapType): Promise<void> {\n\t\treturn CapacitorGoogleMaps.setMapType({\n\t\t\tid: this.id,\n\t\t\tmapType,\n\t\t});\n\t}\n\n\t/**\n\t * Sets whether indoor maps are shown, where available.\n\t *\n\t * @param enabled\n\t * @returns\n\t */\n\tasync enableIndoorMaps(enabled: boolean): Promise<void> {\n\t\treturn CapacitorGoogleMaps.enableIndoorMaps({\n\t\t\tid: this.id,\n\t\t\tenabled,\n\t\t});\n\t}\n\n\t/**\n\t * Controls whether the map is drawing traffic data, if available.\n\t *\n\t * @param enabled\n\t * @returns\n\t */\n\tasync enableTrafficLayer(enabled: boolean): Promise<void> {\n\t\treturn CapacitorGoogleMaps.enableTrafficLayer({\n\t\t\tid: this.id,\n\t\t\tenabled,\n\t\t});\n\t}\n\n\t/**\n\t * Show accessibility elements for overlay objects, such as Marker and Polyline.\n\t *\n\t * Only available on iOS.\n\t *\n\t * @param enabled\n\t * @returns\n\t */\n\tasync enableAccessibilityElements(enabled: boolean): Promise<void> {\n\t\treturn CapacitorGoogleMaps.enableAccessibilityElements({\n\t\t\tid: this.id,\n\t\t\tenabled,\n\t\t});\n\t}\n\n\t/**\n\t * Set whether the My Location dot and accuracy circle is enabled.\n\t *\n\t * @param enabled\n\t * @returns\n\t */\n\tasync enableCurrentLocation(enabled: boolean): Promise<void> {\n\t\treturn CapacitorGoogleMaps.enableCurrentLocation({\n\t\t\tid: this.id,\n\t\t\tenabled,\n\t\t});\n\t}\n\n\t/**\n\t * Set padding on the 'visible' region of the view.\n\t *\n\t * @param padding\n\t * @returns\n\t */\n\tasync setPadding(padding: MapPadding): Promise<void> {\n\t\treturn CapacitorGoogleMaps.setPadding({\n\t\t\tid: this.id,\n\t\t\tpadding,\n\t\t});\n\t}\n\n\t/**\n\t * Get the map's current viewport latitude and longitude bounds.\n\t *\n\t * @returns {LatLngBounds}\n\t */\n\tasync getMapBounds(): Promise<LatLngBounds> {\n\t\treturn new LatLngBounds(\n\t\t\tawait CapacitorGoogleMaps.getMapBounds({\n\t\t\t\tid: this.id,\n\t\t\t})\n\t\t);\n\t}\n\n\tasync fitBounds(bounds: LatLngBounds, padding?: number): Promise<void> {\n\t\treturn CapacitorGoogleMaps.fitBounds({\n\t\t\tid: this.id,\n\t\t\tbounds,\n\t\t\tpadding,\n\t\t});\n\t}\n\n\tinitScrolling(): void {\n\t\tconst ionContents = document.getElementsByTagName('ion-content');\n\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let i = 0; i < ionContents.length; i++) {\n\t\t\t(ionContents[i] as any).scrollEvents = true;\n\t\t}\n\n\t\twindow.addEventListener('ionScroll', this.handleScrollEvent);\n\t\twindow.addEventListener('scroll', this.handleScrollEvent);\n\t\twindow.addEventListener('resize', this.handleScrollEvent);\n\t\tif (screen.orientation) {\n\t\t\tscreen.orientation.addEventListener('change', () => {\n\t\t\t\tsetTimeout(this.updateMapBounds, 500);\n\t\t\t});\n\t\t} else {\n\t\t\twindow.addEventListener('orientationchange', () => {\n\t\t\t\tsetTimeout(this.updateMapBounds, 500);\n\t\t\t});\n\t\t}\n\t}\n\n\tdisableScrolling(): void {\n\t\twindow.removeEventListener('ionScroll', this.handleScrollEvent);\n\t\twindow.removeEventListener('scroll', this.handleScrollEvent);\n\t\twindow.removeEventListener('resize', this.handleScrollEvent);\n\t\tif (screen.orientation) {\n\t\t\tscreen.orientation.removeEventListener('change', () => {\n\t\t\t\tsetTimeout(this.updateMapBounds, 1000);\n\t\t\t});\n\t\t} else {\n\t\t\twindow.removeEventListener('orientationchange', () => {\n\t\t\t\tsetTimeout(this.updateMapBounds, 1000);\n\t\t\t});\n\t\t}\n\t}\n\n\thandleScrollEvent = (): void => this.updateMapBounds();\n\n\tprivate updateMapBounds(): void {\n\t\tif (this.element) {\n\t\t\tconst mapRect = this.element.getBoundingClientRect();\n\n\t\t\tCapacitorGoogleMaps.onScroll({\n\t\t\t\tid: this.id,\n\t\t\t\tmapBounds: {\n\t\t\t\t\tx: mapRect.x,\n\t\t\t\t\ty: mapRect.y,\n\t\t\t\t\twidth: mapRect.width,\n\t\t\t\t\theight: mapRect.height,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t/*\n  private findContainerElement(): HTMLElement | null {\n    if (!this.element) {\n      return null;\n    }\n\n    let parentElement = this.element.parentElement;\n    while (parentElement !== null) {\n      if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n        return parentElement;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    return null;\n  }\n  */\n\n\t/**\n\t * Set the event listener on the map for 'onCameraIdle' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnCameraIdleListener(\n\t\tcallback?: MapListenerCallback<CameraIdleCallbackData>\n\t): Promise<void> {\n\t\tif (this.onCameraIdleListener) {\n\t\t\tthis.onCameraIdleListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onCameraIdleListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onCameraIdle',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onCameraIdleListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onBoundsChanged' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnBoundsChangedListener(\n\t\tcallback?: MapListenerCallback<CameraIdleCallbackData>\n\t): Promise<void> {\n\t\tif (this.onBoundsChangedListener) {\n\t\t\tthis.onBoundsChangedListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onBoundsChangedListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onBoundsChanged',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onBoundsChangedListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onCameraMoveStarted' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnCameraMoveStartedListener(\n\t\tcallback?: MapListenerCallback<CameraMoveStartedCallbackData>\n\t): Promise<void> {\n\t\tif (this.onCameraMoveStartedListener) {\n\t\t\tthis.onCameraMoveStartedListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onCameraMoveStartedListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onCameraMoveStarted',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onCameraMoveStartedListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onClusterClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnClusterClickListener(\n\t\tcallback?: MapListenerCallback<ClusterClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onClusterClickListener) {\n\t\t\tthis.onClusterClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onClusterClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onClusterClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onClusterClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnClusterInfoWindowClickListener(\n\t\tcallback?: MapListenerCallback<ClusterClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onClusterInfoWindowClickListener) {\n\t\t\tthis.onClusterInfoWindowClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onClusterInfoWindowClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onClusterInfoWindowClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onClusterInfoWindowClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onInfoWindowClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnInfoWindowClickListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onInfoWindowClickListener) {\n\t\t\tthis.onInfoWindowClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onInfoWindowClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onInfoWindowClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onInfoWindowClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onMapClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnMapClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void> {\n\t\tif (this.onMapClickListener) {\n\t\t\tthis.onMapClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onMapClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMapClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onMapClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onPolygonClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnPolygonClickListener(\n\t\tcallback?: MapListenerCallback<PolygonClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onPolygonClickListener) {\n\t\t\tthis.onPolygonClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onPolygonClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onPolygonClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onPolygonClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onCircleClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnCircleClickListener(\n\t\tcallback?: MapListenerCallback<CircleClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onCircleClickListener) [this.onCircleClickListener.remove()];\n\n\t\tif (callback) {\n\t\t\tthis.onCircleClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onCircleClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onCircleClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onMarkerClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnMarkerClickListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onMarkerClickListener) {\n\t\t\tthis.onMarkerClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onMarkerClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMarkerClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onMarkerClickListener = undefined;\n\t\t}\n\t}\n\t/**\n\t * Set the event listener on the map for 'onPolylineClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnPolylineClickListener(\n\t\tcallback?: MapListenerCallback<PolylineCallbackData>\n\t): Promise<void> {\n\t\tif (this.onPolylineClickListener) {\n\t\t\tthis.onPolylineClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onPolylineClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onPolylineClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onPolylineClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onMarkerDragStart' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnMarkerDragStartListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onMarkerDragStartListener) {\n\t\t\tthis.onMarkerDragStartListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onMarkerDragStartListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMarkerDragStart',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onMarkerDragStartListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onMarkerDrag' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnMarkerDragListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onMarkerDragListener) {\n\t\t\tthis.onMarkerDragListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onMarkerDragListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMarkerDrag',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onMarkerDragListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onMarkerDragEnd' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnMarkerDragEndListener(\n\t\tcallback?: MapListenerCallback<MarkerClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onMarkerDragEndListener) {\n\t\t\tthis.onMarkerDragEndListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onMarkerDragEndListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMarkerDragEnd',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onMarkerDragEndListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onMyLocationButtonClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnMyLocationButtonClickListener(\n\t\tcallback?: MapListenerCallback<MyLocationButtonClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onMyLocationButtonClickListener) {\n\t\t\tthis.onMyLocationButtonClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onMyLocationButtonClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMyLocationButtonClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onMyLocationButtonClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Set the event listener on the map for 'onMyLocationClick' events.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync setOnMyLocationClickListener(\n\t\tcallback?: MapListenerCallback<MapClickCallbackData>\n\t): Promise<void> {\n\t\tif (this.onMyLocationClickListener) {\n\t\t\tthis.onMyLocationClickListener.remove();\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.onMyLocationClickListener = await CapacitorGoogleMaps.addListener(\n\t\t\t\t'onMyLocationClick',\n\t\t\t\tthis.generateCallback(callback)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onMyLocationClickListener = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Remove all event listeners on the map.\n\t *\n\t * @param callback\n\t * @returns\n\t */\n\tasync removeAllMapListeners(): Promise<void> {\n\t\tif (this.onBoundsChangedListener) {\n\t\t\tthis.onBoundsChangedListener.remove();\n\t\t\tthis.onBoundsChangedListener = undefined;\n\t\t}\n\t\tif (this.onCameraIdleListener) {\n\t\t\tthis.onCameraIdleListener.remove();\n\t\t\tthis.onCameraIdleListener = undefined;\n\t\t}\n\t\tif (this.onCameraMoveStartedListener) {\n\t\t\tthis.onCameraMoveStartedListener.remove();\n\t\t\tthis.onCameraMoveStartedListener = undefined;\n\t\t}\n\n\t\tif (this.onClusterClickListener) {\n\t\t\tthis.onClusterClickListener.remove();\n\t\t\tthis.onClusterClickListener = undefined;\n\t\t}\n\n\t\tif (this.onClusterInfoWindowClickListener) {\n\t\t\tthis.onClusterInfoWindowClickListener.remove();\n\t\t\tthis.onClusterInfoWindowClickListener = undefined;\n\t\t}\n\n\t\tif (this.onInfoWindowClickListener) {\n\t\t\tthis.onInfoWindowClickListener.remove();\n\t\t\tthis.onInfoWindowClickListener = undefined;\n\t\t}\n\n\t\tif (this.onMapClickListener) {\n\t\t\tthis.onMapClickListener.remove();\n\t\t\tthis.onMapClickListener = undefined;\n\t\t}\n\n\t\tif (this.onPolylineClickListener) {\n\t\t\tthis.onPolylineClickListener.remove();\n\t\t\tthis.onPolylineClickListener = undefined;\n\t\t}\n\n\t\tif (this.onMarkerClickListener) {\n\t\t\tthis.onMarkerClickListener.remove();\n\t\t\tthis.onMarkerClickListener = undefined;\n\t\t}\n\n\t\tif (this.onPolygonClickListener) {\n\t\t\tthis.onPolygonClickListener.remove();\n\t\t\tthis.onPolygonClickListener = undefined;\n\t\t}\n\n\t\tif (this.onCircleClickListener) {\n\t\t\tthis.onCircleClickListener.remove();\n\t\t\tthis.onCircleClickListener = undefined;\n\t\t}\n\n\t\tif (this.onMarkerDragStartListener) {\n\t\t\tthis.onMarkerDragStartListener.remove();\n\t\t\tthis.onMarkerDragStartListener = undefined;\n\t\t}\n\n\t\tif (this.onMarkerDragListener) {\n\t\t\tthis.onMarkerDragListener.remove();\n\t\t\tthis.onMarkerDragListener = undefined;\n\t\t}\n\n\t\tif (this.onMarkerDragEndListener) {\n\t\t\tthis.onMarkerDragEndListener.remove();\n\t\t\tthis.onMarkerDragEndListener = undefined;\n\t\t}\n\n\t\tif (this.onMyLocationButtonClickListener) {\n\t\t\tthis.onMyLocationButtonClickListener.remove();\n\t\t\tthis.onMyLocationButtonClickListener = undefined;\n\t\t}\n\n\t\tif (this.onMyLocationClickListener) {\n\t\t\tthis.onMyLocationClickListener.remove();\n\t\t\tthis.onMyLocationClickListener = undefined;\n\t\t}\n\t}\n\n\tprivate generateCallback(callback: MapListenerCallback<any>): MapListenerCallback<any> {\n\t\tconst mapId = this.id;\n\t\treturn (data: any) => {\n\t\t\tif (data.mapId == mapId) {\n\t\t\t\tcallback(data);\n\t\t\t}\n\t\t};\n\t}\n}\n"]}